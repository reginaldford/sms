#!/usr/local/bin/sms -m128
# Usage: This script demonstrates creating a rainbow gradient using colorTGA.write

{
  # Evaluate and include the colorTGA library
  eval(fileParse("colorTGA.sms"));

  # Image dimensions
  let width = 256;
  let height = 256;
  let bytesPerPixel = 3;

  # Create an RGB array for the rainbow gradient
  let rgbArray = ui8Repeat([ui8(0)], width * height * bytesPerPixel);

  # Fill the RGB array with a rainbow gradient
  for (let i = 0; i < height; i++) {
    for (let j = 0; j < width; j++) {
      # Calculate the pixel index in the RGB array
      let rgbIndex = (i * width + j) * bytesPerPixel;

      # Create a gradient with varying colors (RGB order)
      # Assign the RGB values to the array
      rgbArray[rgbIndex]     = ui8((i * 255) / height);   # Red varies by height;
      rgbArray[rgbIndex + 1] = ui8((j * 255) / width);    # Green varies by width;
      rgbArray[rgbIndex + 2] = ui8(((i + j) * 255) / (width + height)); # Blue varies by combined position;
    };
  };

  # Call the colorTGA.write function to create the TGA file
  let result = colorTGA.write("gradient.tga", width, height, rgbArray);
  if (result == true) {
    putLn("Rainbow gradient TGA file 'gradient.tga' has been created.");
  } else {
    putLn("Error: " str+ result);
  };
};

